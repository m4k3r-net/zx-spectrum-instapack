{$O+,F+}
unit inyan;
interface
uses DownLoad,Dos,crt;

var
  save1c: pointer;
  SaveFont : TFont;
  InyanY:byte;
  InyanX:byte;

procedure inyanOn(x,y:byte);
procedure inyanOff;
procedure inyanshow;

implementation

const
   Image : array [0..7,0..1,0..4] of array [0..15] of byte=
   (
       (((0,  0,  0,  0,  0,  1,  3,  7, 15, 15, 31, 63, 63,127,127,127),
        (0,  3, 31,126,252,248,240,240,240,240,240,240,248,252,254,255),
        (0,255,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,128),
        (0,224, 28,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0),
        (0,  0,  0,  0,128, 64, 32, 16,  8,  8,  4,  2,  2,  1,  1,  1)),

     ((127,127,127, 63, 63, 31, 15, 15,  7,  3,  1,  0,  0,  0,  0,  0),
      (255,255,255,255,255,255,255,255,255,255,255,255,127, 31,  3,  0),
      (255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  0),
        (0,192,224,240,248,248,252,252,248,248,240,241,194,156,224,  0),
        (1,  1,  2,  2,  2,  4,  4,  8, 16, 32,192,  0,  0,  0,  0,  0))),

      (((0,  0,  0,  0,  0,  1,  2,  6, 12, 12, 28, 60, 60,124,126,127),
        (0,  3, 28, 96,128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0),
        (0,255,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  7),
        (0,224, 28,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,254,255),
        (0,  0,  0,  0,128, 64, 32, 16,  8,  8,  4,  2,  2,  1,  1,  1)),

     ((127,127,127, 63, 63, 31, 15, 15,  7,  3,  1,  0,  0,  0,  0,  0),
        (0,224,255,255,255,255,255,255,255,255,255,255,127, 31,  3,  0),
       (15,127,255,255,255,255,255,255,255,255,255,255,255,255,255,  0),
      (255,255,255,255,255,255,255,255,255,255,255,255,254,252,224,  0),
      (129,193,226,226,242,244,228,248,240,224,192,  0,  0,  0,  0,  0))),

      (((0,  0,  0,  0,  0,  1,  2,  4,  8,  8, 16, 32, 32, 64, 64, 64),
        (0,  3, 28, 96,128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0),
        (0,255,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  3,  7,  7,  7),
        (0,224, 28,  2,  1,  0,  0,  0,  0,127,255,255,255,255,255,255),
        (0,  0,  0,  0,128, 64, 32, 16,  8,136,228,242,254,255,255,255)),

       ((96, 96, 96, 48, 56, 28, 15, 15,  7,  3,  1,  0,  0,  0,  0,  0),
        (0,  0,  0,  0,  0,  0,  1,255,255,255,255,255,127, 31,  3,  0),
       (15, 15, 15, 31, 63,127,255,255,255,255,255,255,255,255,255,  0),
      (255,255,255,255,255,255,255,255,255,255,255,255,254,252,224,  0),
      (255,255,254,254,254,252,252,248,240,224,192,  0,  0,  0,  0,  0))),

      (((0,  0,  0,  0,  0,  1,  2,  4,  8,  8, 16, 32, 32, 64, 64, 64),
        (0,  3, 28, 96,128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0),
        (0,255,  0,  0,  1,  7, 15, 31, 63, 63, 63, 63, 63, 63, 31, 15),
        (0,224, 28,  2,255,255,255,255,255,255,255,255,255,255,255,255),
        (0,  0,  0,  0,128,192,224,240,248,248,252,254,254,255,255,255)),

       ((64, 64, 64, 32, 32, 16,  8,  8,  4,  2,  1,  0,  0,  0,  0,  0),
         (0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,128,127, 31,  3,  0),
         (7,  3,  1,  1,  1,  1,  1,  1,  3,  7, 15, 63,255,255,255,  0),
       (255,255,255,255,255,255,255,255,255,255,255,255,254,252,224,  0),
       (255,255,254,254,254,252,252,248,240,224,192,  0,  0,  0,  0,  0))),

       (((0,  0,  0,  0,  0,  1,  2,  4,  8,  8, 16, 32, 32, 64, 64, 64),
         (0,  3, 28, 97,131,  7, 15, 15, 15, 15, 15, 15,  7,  3,  1,  0),
         (0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127),
         (0,224,252,254,255,255,255,255,255,255,255,255,255,255,255,255),
         (0,  0,  0,  0,128,192,224,240,248,248,252,254,254,255,255,255)),

       ((64, 64, 64, 32, 32, 16,  8,  8,  4,  2,  1,  0,  0,  0,  0,  0),
         (0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,128, 96, 28,  3,  0),
         (0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,255,  0),
       (255,127, 31, 15,  7,  7,  7,  3,  7,  7, 15, 31, 62,252,224,  0),
       (255,255,254,254,254,252,252,248,240,224,192,  0,  0,  0,  0,  0))),

       (((0,  0,  0,  0,  0,  1,  3,  7, 11, 11, 19, 35, 35, 67, 65, 65),
         (0,  3, 31,127,255,255,255,255,255,255,255,255,255,255,255,255),
         (0,255,255,255,255,255,255,255,255,255,255,255,255,255,254,248),
         (0,224,252,254,255,255,255,255,255,255,255,255,255,255,  1,  0),
         (0,  0,  0,  0,128,192,224,240,248,248,252,254,254,255,255,255)),

        ((64, 64, 64, 32, 32, 16,  8,  8,  4,  2,  1,  0,  0,  0,  0,  0),
        (255, 63,  0,  0,  0,  0,  0,  0,  0,  0,  0,128, 96, 28,  3,  0),
        (240,128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,255,  0),
          (0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  2, 28,224,  0),
        (127, 63, 30, 30, 30, 28, 28, 24, 48, 32,192,  0,  0,  0,  0,  0))),

      (((0,  0,  0,  0,  0,  1,  3,  7, 15, 15, 31, 63, 63,127,127,127),
        (0,  3, 31,127,255,255,255,255,255,255,255,255,255,255,255,255),
        (0,255,255,255,255,255,255,255,255,255,255,254,252,248,248,248),
        (0,224,252,254,255,255,255,255,255,128,  0,  0,  0,  0,  0,  0),
        (0,  0,  0,  0,128,192,224,240,248,120, 28, 14,  6,  3,  3,  3)),

     ((127,127,127, 63, 39, 19,  8,  8,  4,  2,  1,  0,  0,  0,  0,  0),
      (255,255,255,255,255,255,255,  0,  0,  0,  0,128, 96, 28,  3,  0),
      (248,240,240,224,192,128,  0,  0,  0,  0,  0,  0,  0,  0,255,  0),
        (0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  2, 28,224,  0),
        (1,  1,  2,  2,  2,  4,  4,  8, 16, 32,192,  0,  0,  0,  0,  0))),

      (((0,  0,  0,  0,  0,  1,  3,  7, 15, 15, 31, 63, 63,127,127,127),
        (0,  3, 31,127,255,255,255,255,255,255,255,255,255,255,255,255),
        (0,255,255,255,254,248,240,224,192,192,192,192,192,192,224,240),
        (0,224,252,254,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0),
        (0,  0,  0,  0,128, 64, 32, 16,  8,  8,  4,  2,  2,  1,  1,  1)),

     ((127,127,127, 63, 63, 31, 15, 15,  7,  3,  1,  0,  0,  0,  0,  0),
      (255,255,255,255,255,255,255,255,255,255,255,255, 96, 28,  3,  0),
      (248,252,254,254,254,254,254,254,252,248,240,192,  0,  0,255,  0),
        (0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  2, 28,224,  0),
        (1,  1,  2,  2,  2,  4,  4,  8, 16, 32,192,  0,  0,  0,  0,  0))));
  Chars : array [0..1] of array [0..4] of byte =((216,210,211,198,1),
                                             (209,203,207,208,2));

procedure int1C;interrupt;
const
  imageNo : byte = 0;

var
  i,j : byte;
begin

   for i := 0 to 1 do
      for j := 0 to 4 do
           mem[$b800+inyanY*10+i*10:({37}00+j)*2+(inyanX-1)*2] := Chars[i,j];
      ImageNo := (ImageNo + 1) mod 8;
      StartLoad;
      for i := 0 to 1 do
         for j := 0 to 4 do LoadChar(char(Chars[i,j]),@Image[ImageNo,i,j]);
      LoadDone;
end;
{}
procedure inyanOn(x,y:byte);
begin
  StartLoad;
  SaveFont := Font;
  LoadDone;
  inyanY:=y;
  inyanX:=x;

  GetIntVec($1c,save1c);
  SetintVec($1c,@int1c);
  {}
end;



procedure inyanOff;
begin
  SetintVec($1c,save1c);{}
  StartLoad;
  Font := SaveFont;
  LoadDone;
end;


procedure inyanshow;
const
  imageNo : byte = 0;

var
  i,j : byte;
begin
   for i := 0 to 1 do
      for j := 0 to 4 do
           mem[$b800+9*10+i*10:(37+j)*2] := Chars[i,j];
      ImageNo := (ImageNo + 1) mod 8;
      StartLoad;
      for i := 0 to 1 do
         for j := 0 to 4 do LoadChar(char(Chars[i,j]),@Image[ImageNo,i,j]);
      LoadDone;
end;


begin
inyanY:=9;
end.
