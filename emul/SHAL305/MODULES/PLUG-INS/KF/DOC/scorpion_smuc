= Реально на реальном! (2:5030/827.2) =========================== REAL.SPECCY =
 Msg  : 1012 of 1019
 From : Vassili Klimov                      2:5054/37.28                        30 Jul 01  00:22:16
 To   : All                                                                     30 Jul 01  01:19:58
 Subj : CRC и коммутация ПрофПЗУ в скорпе
===============================================================================
                       у здравствуй, All !

   Yahoo!!!!!!!! Убив несколько часов на изучение ПрофПЗУ довожу до вашего 
сведения общий принцип управления. Итак, начнем с описания: ППЗУ 512кб состоит 
из 2х половинок по 256кб никоим образом не связанных с друг другом и 
переключающихся тумблером;). Соответственно в каждой из этих частей полностью 
содержится система (по моим оценкам она занимает 70-80кб).
 Далее, каждая часть побита на блоки по 64кб. Переключение внутри блоков банков
по 16кб стандартное: если в 1FFD бит D1=1, то включено ПЗУ монитора (при любом 
значении бита D4 7FFD), иначе если D4=1 (7FFD), то басик48, если D4=0, то 
басик128. Чтобы, включить пзу трдоса нужно при включенном басике48 сделать 
JP #3DXX. 
    Теперь о переключении блоков. Сначала врубается область теневика (D1=1, 
1FFD). Пусть номер блока (0-3) задан в А, тогда у МОА видим следущее:
     ld hl,#0110:add a,l:ld l,a:jr nc,m1:inc h
m1   ld l,(hl):ld l,(hl):ret
в строке с m1 видим 2 ключевые команды ld l,(hl)! Первая просто читает значение
из таблицы (всего там их 4 штуки: #00,#04,#08,#0c), а вторая врубает блок.
Вроде все тривиально, однако непонятно зачем нужна таблица? Причем в каждом из 
блоков таблицы разные: используются те же значения 0,4,8,c, но порядок их 
расположения другой! Также отмечу, что ячейка #0101 используется для 
идентификации текущего блока. Пример: запомнили число из #0101, включили 
какой-нибудь блок, выполнили какие-либо операции, для восстановления 
предыдущего блока использовали запомненное значение и т.п.

      Теперь о популярной проблеме вычисления CRC сектора подключений;). При 
изучении исходного текста (ZX NEWS 54) было выявлено несколько HУ ОЧЕHЬ тупых 
ошибок, благодаря чему расчет CRC теперь занимает немного блоьше времени, 
однако памяти тратится всего 68 байт! 
Комментировать не буду, влом;). Hе рекомендую лишь использовать эту процедуру в
других целях, лучше напишите свою или возьмите готовую из Hrust Library.

²²²²²²²²²²²²²²²²²²² newcrc  .C ²²²²²²²²²²²²²²²²²²


;CRC CALCULATOR ;-)
;easy generated by J7n/4D/PeRM/RuSSIA/29.07.2001
        .LOCAL
;INP: HL - BUF, BC - LEN
;OUTP: DE - CRC
CRC_CALC
        PUSH    IX
        LD      IX,#FFFF
...0
        LD      A,(HL)
        XOR     LX
        LD      E,A
        CALL    ...1
        XOR     HX
        LD      LX,A
        INC     E
        LD      A,#88
        CALL    NZ,...1
        LD      HX,A
        CPI
        JP      PE,...0
        EX      (SP),IX
        POP     DE
        RET

...1
        LD      A,E
        RRA
        RRA
        RRA
        RRA
        LD      D,A
        AND     #0E
        XOR     E
        AND     #1F
        RRA
        JR      C,...2
        LD      D,A
        RRCA
        RRCA
        AND     #C1
        XOR     E       ;BIT 0,E=0!!!
        RRCA
        AND     #F0
        OR      D
        RET
...2
        ADD     A,A
        ADD     A,A
        ADD     A,A
        ADD     A,A
        XOR     D
        AND     #F0
        XOR     D
        RET
        DISPLAY $-CRC_CALC
²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²

P.S. не разрешается публикация данного алгоритма в ZX NEWS.
    
    С Вами был    .╙■▐╙■▐▓╙ .╙■▐  aka J7n/4D
                  ┐∙■∙┐  ⌠▒▐┐⌠└                               
jtn_собака_mail.ru
                 ░╘╘ ░░■╘▒ ▒░░■╘                                    
spam@fbi.com
--- ZX MEDitation by Lara Croft 4.50
 * Origin: Совсем не origin (2:5054/37.28)

